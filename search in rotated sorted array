import java.io.*;
import java.util.*;
class SearchInRotatedSortedArray {

    // Complete the function implementation below
    public int search(int[] nums, int target) {
        int ans=-1;
        int pivot=findPivot(nums);
        if(pivot==-1){
            ans=binarySearch(0,nums.length-1,nums,target);
            return ans;
        }
        if(nums[pivot]==target){
            return pivot;
        }
        ans=Math.max(binarySearch(0,pivot,nums,target),binarySearch(pivot+1,nums.length-1,nums,target));
        return ans;
    }

    public int binarySearch(int l,int r,int[] arr,int x){
        while(l<=r){
            int mid=(l+r)/2;
            if(arr[mid]==x){
                return mid;
            }else if(arr[mid]>x){
                r=mid-1;
            }else if(arr[mid]<x){
                l=mid+1;
            }
        }
        return -1;
    }

    public int findPivot(int[] nums){
        int l=0;
        int r= nums.length-1;
        if(nums.length==1|| nums.length==2){return 0;}
        while(l<=r){
            int mid=(l+r)/2;
            if(mid==0){return -1;}  //array is not rotated
            if(mid== nums.length-1){return -1;}   //array is not rotated
            if(nums[mid]>nums[0]&&nums[mid+1]<nums[0]){
                return mid;
            }
            else if(nums[mid]>nums[0]){
                l=mid+1;
            }else if(nums[mid]<nums[0]){
                r=mid-1;
            }
        }
        return -1;
    }

    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int nums[] = new int[n];
        for(int i = 0 ; i < n; i++) {
            nums[i] = scanner.nextInt();
        }
        int q = scanner.nextInt();
        while(q > 0) {
            int target = scanner.nextInt();
            int result = new SearchInRotatedSortedArray().search(nums , target);
            System.out.println(result);
            q--;
        }
    }
}
