import java.util.*;

class NthRoot {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {

            int x = sc.nextInt();
            int n = sc.nextInt();

            int ans = nthRoot(x, n);

            System.out.println(ans);
        }
    }
    // static double multiply(double number, int n) {
    //     double ans = 1.0;
    //     for(int i = 1;i<=n;i++) {
    //         ans = ans * number;
    //     }
    //     return ans; 
    // }

    static int nthRoot(int x, int n) {
        int start=1;
        int end=x;
        int ans=x;
        while(start<=end){
            int mid=(start+end)/2;
            int product=(int) Math.pow(mid,n);        //binary Exponentiation:- O(log n)
            //int product=(int)multiply(mid,n);        // normel exponentiation - O(n)
            if(product>x){
                end=mid-1;
            }
            else if(product<x){
                ans=mid;
                start= mid+1;
            }else{
                return mid;
            }
        }
        return ans;
    }


}
